{"version":3,"sources":["cat-image.gif","happy-cat.gif","getQuestions.js","getAnswer.js","button.jsx","getScore.js","scoreLayout.jsx","questionLayout.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","questions","_id","title","options","option","getQuestion","id","find","q","answers","oId","getAnswer","Button","onClickNext","type","className","onClick","sc","getScore","score","push","length","ScoreLayout","props","src","cat","happyCat","QuestionLayout","state","question","answer","selectedOption","responses","handleOptionChange","changeEvent","a","setState","target","value","changeScore","handleNext","this","map","m","key","name","checked","onChange","htmlFor","onClickPrevious","handlePrevious","Component","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9bc4a8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat-image.3bc49bbe.gif\";","module.exports = __webpack_public_path__ + \"static/media/happy-cat.95c62cea.gif\";","const questions = [\r\n  {\r\n    _id: 1,\r\n    title: \"What is my favourite Color?\",\r\n    options: [\r\n      { _id: 1, option: \"red\" },\r\n      { _id: 2, option: \"blue\" },\r\n      { _id: 3, option: \"white\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 2,\r\n    title: \"What is my favourite Cuisine?\",\r\n    options: [\r\n      { _id: 1, option: \"Chinese\" },\r\n      { _id: 2, option: \"North Indian\" },\r\n      { _id: 3, option: \"Italian\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 3,\r\n    title: \"Who is my first bollywood crush?\",\r\n    options: [\r\n      { _id: 1, option: \"Hritik Roshan\" },\r\n      { _id: 2, option: \"ShahRukh\" },\r\n      { _id: 3, option: \"Ranbir\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 4,\r\n    title: \"What is my favourite English Rom Com?\",\r\n    options: [\r\n      { _id: 1, option: \"Titanic\" },\r\n      { _id: 2, option: \"Pretty Woman\" },\r\n      { _id: 3, option: \"Notebook\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 5,\r\n    title: \"What is my favourite Hindi Rom Com?\",\r\n    options: [\r\n      { _id: 1, option: \"Kuch Kuch Hota Hai\" },\r\n      { _id: 2, option: \"Dilwale Dulhaniya Le Jayenge\" },\r\n      { _id: 3, option: \"Kal Ho  Na Ho\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 6,\r\n    title: \"What is my favourite Ice-Cream Flavour?\",\r\n    options: [\r\n      { _id: 1, option: \"Strawberry\" },\r\n      { _id: 2, option: \"Chocolate\" },\r\n      { _id: 3, option: \"Butterscotch\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 7,\r\n    title: \"What is my favourite Tv series genre?\",\r\n    options: [\r\n      { _id: 1, option: \"Sci-Fi\" },\r\n      { _id: 2, option: \"Thriller\" },\r\n      { _id: 3, option: \"Comedy\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 8,\r\n    title:\r\n      \"What is one of the common/popular hobbies that you can relate me with?\",\r\n    options: [\r\n      { _id: 1, option: \"Sketching\" },\r\n      { _id: 2, option: \"Dancing\" },\r\n      { _id: 3, option: \"Writing\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 9,\r\n    title: \"what are the names of my kittens?\",\r\n    options: [\r\n      { _id: 1, option: \"Doodle & Model\" },\r\n      { _id: 2, option: \"Doodle & Poodle\" },\r\n      { _id: 3, option: \" Model & Poodle\" },\r\n    ],\r\n  },\r\n  {\r\n    _id: 10,\r\n    title:\r\n      \"If I were to plan a holiday, where would I mostly likely choose to go?\",\r\n    options: [\r\n      { _id: 1, option: \"Mountains\" },\r\n      { _id: 2, option: \"Remote Village\" },\r\n      { _id: 3, option: \"Beaches\" },\r\n    ],\r\n  },\r\n];\r\n\r\nexport function getQustions() {\r\n  return questions;\r\n}\r\n\r\nexport function getQuestion(id) {\r\n  return questions.find((q) => q._id === id);\r\n}\r\n","const answers = [\r\n  { _id: 1, oId: \"2\" },\r\n  { _id: 2, oId: \"1\" },\r\n  { _id: 3, oId: \"2\" },\r\n  { _id: 4, oId: \"2\" },\r\n  { _id: 5, oId: \"1\" },\r\n  { _id: 6, oId: \"2\" },\r\n  { _id: 7, oId: \"3\" },\r\n  { _id: 8, oId: \"1\" },\r\n  { _id: 9, oId: \"1\" },\r\n  { _id: 10, oId: \"3\" },\r\n];\r\n\r\nexport function getAnswer(id) {\r\n  return answers.find((q) => q._id === id);\r\n}\r\n","import React from \"react\";\r\nconst Button = ({ id, onClickNext }) => {\r\n  if (id > 0 && id < 10)\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-md\"\r\n          onClick={() => onClickNext()}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  else if (id === 10)\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning\"\r\n          onClick={() => onClickNext()}\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","var scores = [\r\n  { _id: 1, point: 0 },\r\n  { _id: 2, point: 0 },\r\n  { _id: 3, point: 0 },\r\n  { _id: 4, point: 0 },\r\n  { _id: 5, point: 0 },\r\n  { _id: 6, point: 0 },\r\n  { _id: 7, point: 0 },\r\n  { _id: 8, point: 0 },\r\n  { _id: 9, point: 0 },\r\n  { _id: 10, point: 0 },\r\n];\r\n\r\nexport function saveScore(id, selectedOption, answer) {\r\n  let scoreInDb = scores.find((x) => x._id === id);\r\n  if (parseInt(selectedOption) === parseInt(answer.oId)) {\r\n    scoreInDb.point = 1;\r\n  } else if (selectedOption !== answer.oId) {\r\n    scoreInDb.point = 0;\r\n  }\r\n  return scoreInDb.point;\r\n}\r\n\r\nlet sc = [1, 2, 3];\r\n\r\nexport function getScore(score) {\r\n  sc.push(\"8\");\r\n  return sc.length;\r\n}\r\n\r\nexport function getSc() {\r\n  let len = sc.length;\r\n  return len;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport cat from \"./cat-image.gif\";\r\nimport happyCat from \"./happy-cat.gif\";\r\nimport \"./quiz-app.css\";\r\nconst ScoreLayout = (props) => {\r\n  if (props.score > 5)\r\n    return (\r\n      <div className=\"onSubmit\">\r\n        <p> You seem to know me pretty well! :) </p>\r\n        <p> Your score is {props.score}! </p>\r\n        <p>Screenshot your Score!</p>\r\n        <img src={cat} />\r\n      </div>\r\n    );\r\n  else if (props.score > 6)\r\n    return (\r\n      <div className=\"onSubmit\">\r\n        <p>Amazing!! :D</p>\r\n        <p> Your score is {props.score} !</p>\r\n        <p>Screenshot your Score!</p>\r\n        <img src={happyCat} />\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"onSubmit\">\r\n        <p> Umm..we really need to talk more! :( </p>\r\n        <p> Your score is {props.score} ! </p>\r\n        <p>Screenshot your Score!</p>\r\n        <img src={cat} />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ScoreLayout;\r\n","import React, { Component } from \"react\";\r\nimport { getQuestion } from \"./getQuestions\";\r\nimport { getAnswer } from \"./getAnswer\";\r\nimport Button from \"./button\";\r\nimport { getScore } from \"./getScore\";\r\nimport ScoreLayout from \"./scoreLayout\";\r\nimport \"./quiz-app.css\";\r\nclass QuestionLayout extends Component {\r\n  state = {\r\n    id: 1,\r\n    question: getQuestion(1),\r\n    answer: getAnswer(1),\r\n    score: 0,\r\n    selectedOption: \"\",\r\n    responses: 1,\r\n  };\r\n\r\n  handleOptionChange = async (changeEvent) => {\r\n    if (this.state.id <= 10) {\r\n      this.setState(\r\n        {\r\n          selectedOption: changeEvent.target.value,\r\n        },\r\n        this.changeScore\r\n      );\r\n    }\r\n  };\r\n\r\n  handleNext = () => {\r\n    let id = this.state.id;\r\n    id = id + 1;\r\n    if (id <= 10)\r\n      this.setState({\r\n        id: id,\r\n        question: getQuestion(id),\r\n        answer: getAnswer(id),\r\n        responses: id,\r\n      });\r\n    else if (id > 10) this.setState({ responses: id });\r\n  };\r\n  changeScore = () => {\r\n    let score = this.state.score;\r\n    score = score + 1;\r\n    if (this.state.selectedOption === this.state.answer.oId) {\r\n      this.setState({ score: score }, () => getScore(this.state.score));\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.responses < 11 ? (\r\n          <div className=\"container p-5\">\r\n            <div className=\"pageNumber\">{this.state.question._id} /10</div>\r\n            <div className=\"question\">\r\n              <p>\"{this.state.question.title}\"</p>\r\n            </div>\r\n            <div className=\"custom-control custom-radio p-3 radio-btn\">\r\n              {this.state.question.options.map((m) => (\r\n                <div key={m._id}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={m._id}\r\n                    name=\"customRadio\"\r\n                    value={m._id}\r\n                    checked={false}\r\n                    onChange={this.handleOptionChange}\r\n                    className=\"custom-control-input p-4\"\r\n                  />\r\n                  <label className=\"custom-control-label\" htmlFor={m._id}>\r\n                    {m.option}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div>\r\n              <Button\r\n                id={this.state.id}\r\n                onClickPrevious={this.handlePrevious}\r\n                onClickNext={this.handleNext}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <ScoreLayout score={this.state.score} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionLayout;\r\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport QuestionLayout from \"./questionLayout\";\nimport { Route } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport ScoreLayout from \"./scoreLayout\";\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"content\">\n        <Route path=\"/\" exact component={QuestionLayout} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}